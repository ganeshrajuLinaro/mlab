# Localization

d-i debian-installer/locale string en_US
d-i keyboard-configuration/xkb-keymap select us

# Network configuration

d-i netcfg/choose_interface select auto
d-i netcfg/dhcp_timeout string 60
d-i netcfg/disable_autoconfig boolean false

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.

d-i netcfg/get_hostname string {{ hostname }}

# Domain name:
d-i netcfg/get_domain string

# If you want to force a hostname, regardless of what either the DHCP
# server returns or what the reverse DNS entry for the IP is, uncomment
# and adjust the following line.
d-i netcfg/hostname string "{{hostname}}"


# Mirror settings
d-i mirror/country string UK
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# Account setup
# Skip creation of a root account (normal user account will be able to
# use sudo).
d-i passwd/root-login boolean false

d-i passwd/user-fullname string linaro
d-i passwd/username string linaro
d-i passwd/user-password password linaro
d-i passwd/user-password-again password linaro

# Clock and time zone setup

d-i clock-setup/utc boolean true
d-i time/zone string GMT
d-i clock-setup/ntp boolean true

# Partitioning
d-i partman-auto/disk string /dev/sda
d-i partman-basicfilesystems/no_swap boolean false
d-i partman-auto/choose_recipe select myroot
d-i partman-auto/expert_recipe string \
   myroot :: \
    228 8000 256 ext2             \
      $primary{ }                     \
      $bootable{ }                \
      method{ format }            \
      format{ }                       \
      use_filesystem{ }               \
      filesystem{ ext2 }              \
      mountpoint{ /boot } .       \
    538 538 1075 free	\
    $iflabel{ gpt }	\
    $reusemethod{ }	\
    method{ efi }	\
    format{ } .	\
    1000 50 -1 ext4 \
     $primary{ } \
     $bootable{ } \
     method{ format } \
     format{ } \
     device{ /dev/sda } \
     use_filesystem{ } \
     filesystem{ ext4 } \
     mountpoint{ / } .
d-i partman-auto/method string regular
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Package selection
tasksel tasksel/first multiselect standard, ssh-server
d-i pkgsel/include string openssh-server build-essential git vim wget
# d-i pkgsel/upgrade select full-upgrade 
popularity-contest popularity-contest/participate boolean false

# Misc options
d-i preseed/late_command string \
     in-target apt-get install -y vim python-pip ansible docker python-dev libffi-dev gcc libssl-dev python-selinux git; \
     in-target usermod -aG docker linaro ; \
     echo 'linaro ALL=(ALL) NOPASSWD: ALL' > /target/etc/sudoers.d/linaro ; \
     in-target chmod 440 /etc/sudoers.d/linaro ; \
     update-dev; in-target update-grub ;
d-i grub-installer/bootdev string /dev/sda
d-i finish-install/reboot_in_progress note


# Late commands & GRUB_CMDLINE_LINUX modification for console enabling
d-i preseed/late_command string \
in-target sed -i 's/stretch/buster/g' /etc/apt/sources.list ; \
in-target apt-get update ; \
in-target apt-get upgrade -y --force-yes -q ; \
in-target apt-get dist-upgrade -y --force-yes -q ; \
rm -f /target/etc/apt/sources.list ; \
echo "deb http://deb.debian.org/debian/ sid main non-free contrib" > /target/etc/apt/sources.list ; \
echo "deb-src http://deb.debian.org/debian/ sid main non-free contrib" >> /target/etc/apt/sources.list ; \
echo "deb http://debug.mirrors.debian.org/debian-debug/ sid-debug main" >> /target/etc/apt/sources.list ; \
chmod 644 /target/etc/apt/sources.list ; \
in-target sync ; \
in-target apt-get update ; \
in-target apt-get upgrade -y --force-yes -q ; \
in-target apt-get dist-upgrade -y --force-yes -q ; \
chmod 600 /target/root/.ssh/authorized_keys ; \
in-target sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin without-password/g' /etc/ssh/sshd_config ; \
in-target mkdir -p /root/.ssh ; \
in-target chmod 700 /target/root/.ssh ; \
echo "{{ hostname }}" > /target/etc/hostname ; \
{% for key in ssh_keys %}
printf "{{key}}\n" >> /target/root/.ssh/authorized_keys ; \
{% endfor %}
in-target sync ;
